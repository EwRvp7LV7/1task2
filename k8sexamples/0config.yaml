# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-ingress-tcp-microk8s-conf
#   namespace: ingress
# data:
#   8080: "default/go-grpc-greeter-server:50051"
# # ---
# # apiVersion: v1
# # kind: ConfigMap
# # metadata:
# #   name: nginx-ingress-udp-microk8s-conf
# #   namespace: ingress
# # data:
# #   53: "default/coredns-service:53"
# ---
# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   name: nginx-ingress-microk8s-controller
#   namespace: ingress
# spec:
#   selector:
#     matchLabels:
#       name: nginx-ingress-microk8s-controller
#   template:
#     metadata:
#       labels:
#         name: nginx-ingress-microk8s-controller
#     spec:
#       containers:
#       - name: nginx-ingress-microk8s
#         args:
#         - /nginx-ingress-controller
#         # - --tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf
#         # - --udp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-udp-microk8s-conf
#         - --tcp-services-configmap=ingress/nginx-ingress-tcp-microk8s-conf
#         - --publish-status-address=127.0.0.1
#         # env:
#         #   # - name: POD_NAME
#         #   - name: go-grpc-greeter-server
#         #     valueFrom:
#         #       fieldRef:
#         #         apiVersion: v1
#         #         fieldPath: metadata.name
#         #   # - name: POD_NAMESPACE
#         #   - name: default
#         #     valueFrom:
#         #       fieldRef:
#         #         apiVersion: v1
#         #         fieldPath: metadata.namespace
#         image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:latest
#         ports:
#         - containerPort: 80
#         - containerPort: 443
#         - name: proxied-tcp-53
#           containerPort: 50051
#           hostPort: 8080
#           protocol: TCP
#         # - name: proxied-udp-53
#         #   containerPort: 53
#         #   hostPort: 53
#         #   protocol: UDP












---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-ingress-tcp-microk8s-conf
#   namespace: ingress
# data:
#   25565: "default/minecraft-service:25565"
# ---
# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   name: nginx-ingress-microk8s-controller
#   namespace: ingress
# spec:
#   template:
#     spec:
#       containers:
#       - name: nginx-ingress-microk8s
#         ports:
#         - containerPort: 80
#         - containerPort: 443
#         - name: minecraft
#           containerPort: 25565
#           hostPort: 25565
#           protocol: TCP



# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-ingress-tcp-microk8s-conf
#   namespace: ingress
# data:
#   6379: "default/redis:6379"
# ---
# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   name: nginx-ingress-microk8s-controller
#   namespace: ingress
# spec:
#   selector:
#     matchLabels:
#       app: nginx-ingress-microk8s
#   template:
#     metadata:
#       labels:
#         app: nginx-ingress-microk8s
#     spec:
#       containers:
#         - image: nginx/nginx-ingress:latest
#           name: nginx-ingress-microk8s
#           ports:
#             - containerPort: 80
#             - containerPort: 443
#             - name: tcp-6379
#               containerPort: 6379
#               hostPort: 6379
#               protocol: TCP
#           resources:
#             limits:
#               cpu: 100m
#               memory: 100Mi
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: http-ingress
# spec:
#   rules:
#     - http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: redis-service
#                 port:
#                   number: 6379
# ---
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: redis-service
#   name: redis-service
# spec:
#   ports:
#     - port: 8080
#       protocol: TCP
#       targetPort: 8080
#   selector:
#     app: redis-service
#   type: NodePort
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: redis-service
#   name: redis-service
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: redis-service
#   template:
#     metadata:
#       labels:
#         app: redis-service
#     spec:
#       containers:
#         - image: redis:latest
#           name: redis
#           resources:
#             limits:
#               cpu: 100m
#               memory: 100Mi
# # telnet 185.66.71.210 6379
